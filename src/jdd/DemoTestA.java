package jdd;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import helper.MatchOdds;
import utils.HttpRequester;
import utils.HttpRespons;

public class DemoTestA {
	private static String URL = "https://client.jdd.com/action/MobileHandler.ashx";

	static Map<String, String> params = new HashMap<String, String>();
	
	public void testA(String url) throws IOException{
		ArrayList<MatchOdds> list = new ArrayList<MatchOdds>();
		params.put("action", "202");
		params.put("appVersion", "3.7.1");
		params.put("cmdId", "3718969");
		params.put("cmdName", "app_yyb");
		params.put("params", "{}");
		params.put("platformCode", "Android");
		params.put("platformVersion", "4.4.4");
		params.put("sign", "127B84B57BC26AC9EA23DAC8A7C16055");
		params.put("UserID", "MTA4MDM5NTY=");
		params.put("uuid", "ffffffff-87b3-1fd3-be31-2c220033c587");

		HttpRequester request = new HttpRequester();
		request.setDefaultContentEncoding("utf-8");
		HttpRespons hr = request.sendGet(URL);

		String json = hr.getContent().replaceAll("\\\\r\\\\n", "");

		if (json == null || json.equals("")) {
			saveToFile("empty content!!!", "",false);
		} else {
		}
		
		
	}

	public static void main(String[] args) {
		String url = "http://dcds.jdd.com/Api.Soccer.V3/Ajax/Live.ashx?action=qlive&lotteryid=90&matchids=10984912,9720679,10802078,11019133,9720707,9648993,9649025,9566221,9566237,9820795,9539987,9690315,11019123,9646989,10862466,9566047,9540143,9720691,9720665,9769581,9645867,9612813,10862626,9596359,9566051,9566233,11019131,9820759,9566057,9691127,9649035,10477042,9540131,10801250,9645871,10801208,9690329,9600235,9539971,9647009,9539975,10802074,9566045,9566055,9646995,10798592,9645917,9640657,9640647,9645893,9769573,9769571,9769587,9540139,9645887,9649009,10828552,9640677,9647005,10984920,9691099,9539973,9646981,9691121,9769563,9600223,9788949,9640671,9566229,9540135,9769591,9596345,9649029,9788951,9640681,10477040,9645911,9690331,10801124,9820719,9649039,9769593,9645903,9820791,9649031,9566033,9566037,9649045,9566225,9600227,10862618,10982602,9566223,9566061,9691115,9788953,9769595,10937014,9649043,9690337,9640673,9649019,9612805,10974648,10477034,9600213,10801254,9596361,9539977,9600215,9720649,10758304,9691105,10937012,9600211,10801198,9690327,9600237,10973234,9539983,9788941,9649027,9690307,9540147,9647023,10802072,10795212,9820763,9649041,10801160,9649017,9539985,9690319,9691109,10795192,10802076,9566067,9720645,9691131,11023189,10942982,9820787,9566035,9640651,10758302,10982604,10807242,9690321,9539961,9645873,9645895,9690317,10477036,9649003,9640655,10477044,9690333,9649021,10477038,9690341,9769589,9539951,9788939,9691123,9820727,9540133,9600209,10984916,9600207,10802070,9566065,9769575,9539979,9600219,9640679,9539965,9645915,10477046,9539957,9612811,9720641,9645889,10937008,9600239,9600203,9648997,9788957,10966398,10937002,9649011,10862462,9566059,9691119,10937004,9820775,9820739,9769561,9691095,9566235,11007347,9539969,9649007,11017467,9645909,9647003,9690309,9691101,9647021,9646991,9690311,9596347,9600217,9820743,9720695,9690325,9645885,9596351,9690335,9600231,9769579,9820735,10477032,9596353,9820731,9691125,9600233,9640659,9640649,10937018,9612815,9769583,9690323,9649037,9769559,9691129,9769569,10985486,10937006,10795172,9566053,10778472,9690305,9645877,9600229,9645905,9769577,10859584,10991072,9645899,9596355,9645897,9820779,9640675,10942916,9540141,9566063,10862468,9649005,10862616,9820771,10807244,9645901,9539953&pts=0&r=1486904113707";
		
	}
	
	public static void saveToFile(String text, String path, boolean isClose) {
		File file = new File("runlog.txt");
		BufferedWriter bf = null;
		try {
			FileOutputStream outputStream = new FileOutputStream(file, true);
			OutputStreamWriter outWriter = new OutputStreamWriter(outputStream);
			bf = new BufferedWriter(outWriter);
			bf.append(text);
			bf.newLine();
			bf.flush();

			if (isClose) {
				bf.close();
			}
		} catch (FileNotFoundException e1) {
			e1.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

	}

}
